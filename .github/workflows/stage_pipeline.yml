# This workflow will install Python dependencies, lint and check for syntax errors run with a single version of Python
# After that the workflow will also run all unit tests via pytest with a matrix of multiple OS and Python versions
# On successful build and test it will create a docker image for stage environment and push it to a repository

name: Sriy STAGE - CI/CD Pipeline

on:
  pull_request:
    branches: [ sri/new ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        pip install -r requirements.txt        
    - name: Install project
      run: |
        pip install -e .
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 flaskr --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 flaskr --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
  test:
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.9]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install -r requirements.txt        
    - name: Install project
      run: |
        pip install -e .
    - name: Test with pytest
      run: |
        pytest

  bandit-scan:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
    # Checkout the code from GitHub
      - uses: actions/checkout@v2
    # Runs a pre configured Bandit scan 
      - name: Run bandit
        uses: jpetrucciani/bandit-check@master
        with:
        # only scans under this path
          path: './flaskr'
    
  deploy:
    needs: [bandit-scan]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Docker image
        run: docker build . -t mgrum/flask-example-cicd:stage
      - name: Push Docker image
        run: docker push mgrum/flask-example-cicd:stage
